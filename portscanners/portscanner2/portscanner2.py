#! /usr/bin/python3

"""SSH - HTTP - HTTPS Scanner """

import ascii_art as art
import socket

art.render('PORTScanner2.0','slant')

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.settimeout(5)

in_host = input("Addja meg a Scannelendo HOST-t: ")
# in_port = int(input("Addja meg a PORT-t: "))

class Portok:
    port_number1 = None
    port_number2 = None
    port_number3 = None
    port_name1 = " "
    port_name2 = " "
    port_name3 = " "
    def __init__(self,var1,var2,var3,var4,var5,var6):
        self.port_number1 = var1
        self.port_name1 = var2
        self.port_number2 = var3
        self.port_name2 = var4
        self.port_number3 = var5
        self.port_name3 = var6

# def portscann(port,host):
#     if s.connect_ex((host,port)):
#         print("Port is CLOSED")
#     else:
#         print("PORT is OPEN")

def portscann2(port,host,name):
    if s.connect_ex((host,port)):
        print("Port '"+name+"' is CLOSED")
    else:
        print("Port '"+name+"' is OPEN")

scannable_ports = Portok(22,"SSH",80,"HTTP",443,"HTTPS")

portscann2(scannable_ports.port_number1,in_host,scannable_ports.port_name1)
portscann2(scannable_ports.port_number2,in_host,scannable_ports.port_name2)
portscann2(scannable_ports.port_number3,in_host,scannable_ports.port_name3)

# print("Kivant scann:"+"\t"*2+in_host+"-HOST"+"\t"*2+str(in_port)+"-PORT")
